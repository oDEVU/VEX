import{_ as s,c as e,o as n,a}from"./app.d3030ee2.js";const F=JSON.parse('{"title":"MeshComponent","description":"","frontmatter":{},"headers":[{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[]}],"relativePath":"samples/Components/meshcomponent.md"}'),o={name:"samples/Components/meshcomponent.md"},t=a(`<h1 id="meshcomponent" tabindex="-1">MeshComponent <a class="header-anchor" href="#meshcomponent" aria-hidden="true">#</a></h1><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Will go under refactoring since all curent mesh system is not behaving as i would like it. It simply holds mesh data and texture paths. But creation of this component must be by ModelCreator since its the one streaming data in, so it needs better handling.</p></div><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h2><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">components/GameObjects/Creators/ModelCreator.hpp</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">vex</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">MeshComponent mesh </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">vex</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">createMeshFromPath</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Assets/mesh.obj</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> m_engine</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Mesh parsing is handled by assimp so most mesh formats are suported. Just keep in mind that for formats that can hold multiple meshes it will combine them into one due to engine design. This may change in the future.</p></div>`,5),l=[t];function p(c,r,i,m,h,d){return n(),e("div",null,l)}const D=s(o,[["render",p]]);export{F as __pageData,D as default};
