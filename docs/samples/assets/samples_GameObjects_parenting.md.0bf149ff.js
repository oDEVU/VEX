import{_ as e,c as t,o as s,a}from"./app.b823bf6a.js";const u=JSON.parse('{"title":"Entities and parenting","description":"","frontmatter":{},"headers":[{"level":2,"title":"How do they work?","slug":"how-do-they-work","link":"#how-do-they-work","children":[]}],"relativePath":"samples/GameObjects/parenting.md"}'),n={name:"samples/GameObjects/parenting.md"},o=a(`<h1 id="entities-and-parenting" tabindex="-1">Entities and parenting <a class="header-anchor" href="#entities-and-parenting" aria-hidden="true">#</a></h1><p>While yes VEX doesn&#39;t use a standard ECS system, it does provide a way to manage entities and their relationships through the use of parent-child hierarchies. This allows for a more intuitive and flexible approach to organizing game objects.</p><h2 id="how-do-they-work" tabindex="-1">How do they work? <a class="header-anchor" href="#how-do-they-work" aria-hidden="true">#</a></h2><p>Every object has an entity assigned to it. You can get it by simply calling</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#FFCB6B;">entt</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">entity entity </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> object</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">GetEntity</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span></code></pre></div><p>Entities are internally used to get object components as its faster to keep track of entities than whole GameObjects registry. You can curently mostly use it for parenting. Lets say i created MeshObject in my custom ChestObject and i want to parent it so the transforms propagate correctly. I would do something like this in my chest code.</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">meshObject</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">ParentTo</span><span style="color:#89DDFF;">(this-&gt;</span><span style="color:#82AAFF;">GetEntity</span><span style="color:#89DDFF;">());</span></span>
<span class="line"></span></code></pre></div><p>Entities should be used as an identifier for objects in the game world. They are used to keep track of objects and their relationships, and are used to optimize performance by reducing the amount of data that needs to be stored and processed.</p><p>See also: <a href="https://odevu.github.io/VEX/classvex_1_1GameObject.html" target="_blank" rel="noreferrer">Code Documentation</a></p>`,9),i=[o];function r(p,c,l,d,h,y){return s(),t("div",null,i)}const m=e(n,[["render",r]]);export{u as __pageData,m as default};
