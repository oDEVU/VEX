import{_ as s,c as n,o as a,a as o}from"./app.d3030ee2.js";const d=JSON.parse('{"title":"Custom Components","description":"","frontmatter":{},"headers":[{"level":2,"title":"Defining","slug":"defining","link":"#defining","children":[]},{"level":2,"title":"Loading from scene files","slug":"loading-from-scene-files","link":"#loading-from-scene-files","children":[]}],"relativePath":"samples/Components/custom.md"}'),e={name:"samples/Components/custom.md"},l=o(`<h1 id="custom-components" tabindex="-1">Custom Components <a class="header-anchor" href="#custom-components" aria-hidden="true">#</a></h1><p>Similarly to GameObjects you can also define custom components, but since their data heavy nature, it isn&#39;t as simple to dynamically load them as with GameObjects.</p><h2 id="defining" tabindex="-1">Defining <a class="header-anchor" href="#defining" aria-hidden="true">#</a></h2><p>Custom components are just any structs. No need for inheritance, or special fields.</p><p>But if we want to make them loadable from scene files, we need to implement that logic ourselfs cause of c++ lack of reflection.</p><h2 id="loading-from-scene-files" tabindex="-1">Loading from scene files <a class="header-anchor" href="#loading-from-scene-files" aria-hidden="true">#</a></h2><p>Defining and registering that function is simple tho. First we need to include ComponentFactory, it will allow us to register our load function. Then we need to create void function that takes reference to GameObject and json object as parameters, and the tedious part, load all data that we need.</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">components/GameComponents/ComponentFactory.hpp</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">loadCustomComponent</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">GameObject</span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">gameObject</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">nlohmann</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">json</span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    CustomComponent comp</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">json</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">contains</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">some_value</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">comp</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">some_value</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">];</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    gameObject</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addComponent</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">comp</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">REGISTER_COMPONENT</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">CustomComponent</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> loadCustomComponent</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div>`,8),p=[l];function t(c,r,i,D,F,y){return a(),n("div",null,p)}const m=s(e,[["render",t]]);export{d as __pageData,m as default};
